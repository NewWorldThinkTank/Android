Index: app/src/test/java/com/cesta/cesta/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/com/cesta/cesta/ExampleUnitTest.java	(revision )
+++ app/src/test/java/com/cesta/cesta/ExampleUnitTest.java	(revision )
@@ -0,0 +1,15 @@
+package com.cesta.cesta;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * To work on unit tests, switch the Test Artifact in the Build Variants view.
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/dialog_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/dialog_layout.xml	(revision )
+++ app/src/main/res/layout/dialog_layout.xml	(revision )
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <!--<TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Destination"
+        android:id="@+id/textView" />-->
+
+    <android.support.v7.widget.AppCompatTextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Destination" />
+
+    <!--<TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Time"
+        android:id="@+id/time"/>-->
+
+    <android.support.v7.widget.AppCompatEditText
+        android:id="@+id/destination"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:hint="Destination" />
+
+    <android.support.v7.widget.AppCompatTextView
+        android:id="@+id/seats"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Seats Available" />
+
+    <android.support.v7.widget.AppCompatSpinner
+        android:id="@+id/seat_spinner"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content" />
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision )
+++ app/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,35 @@
+<resources>
+    <string name="app_name">Cesta</string>
+    <string name="action_settings">Settings</string>
+
+    <string name="title_activity_login">LoginActivity</string>
+    <string name="title_activity_map">MapActivity</string>
+
+    <string name="log_in">Log in</string>
+
+    <!-- TODO: Remove or change this placeholder text -->
+    <string name="hello_blank_fragment">Hello blank fragment</string>
+
+    <array name="frag_list">
+        <item>Item1</item>
+        <item>Item2</item>
+        <item>Item3</item>
+    </array>
+
+    <string name="drawer_open">Drawer open.</string>
+    <string name="drawer_close">Drawer close.</string>
+    <color name="white">#FFFFFF</color>
+    <color name="orange">#FF6F00</color>
+    <string name="facebook_app_id">190240024656344</string>
+    <string name="title_activity_maps">Map</string>
+    <string name="title_activity_google_sign">GoogleSignActivity</string>
+
+    <string-array name="seats">
+        <item>1</item>
+        <item>2</item>
+        <item>3</item>
+        <item>4</item>
+        <item>Custom</item>
+    </string-array>
+    <string name="title_activity_profile">ProfileActivity</string>
+</resources>
Index: app/src/androidTest/java/com/cesta/cesta/ApplicationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/cesta/cesta/ApplicationTest.java	(revision )
+++ app/src/androidTest/java/com/cesta/cesta/ApplicationTest.java	(revision )
@@ -0,0 +1,13 @@
+package com.cesta.cesta;
+
+import android.app.Application;
+import android.test.ApplicationTestCase;
+
+/**
+ * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
+ */
+public class ApplicationTest extends ApplicationTestCase<Application> {
+    public ApplicationTest() {
+        super(Application.class);
+    }
+}
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision )
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,81 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest package="com.cesta.cesta"
+          xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <uses-permission android:name="android.permission.INTERNET"/>
+    <uses-permission android:name="android.permission.GET_ACCOUNTS"/>
+    <uses-permission android:name="android.permission.USE_CREDENTIALS"/>
+    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
+
+    <!--
+         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
+         Google Maps Android API v2, but you must specify either coarse or fine
+         location permissions for the 'MyLocation' functionality. 
+    -->
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
+
+    <uses-feature
+        android:glEsVersion="0x00020000"
+        android:required="true"/>
+
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme">
+        <meta-data
+            android:name="com.facebook.sdk.ApplicationId"
+            android:value="@string/facebook_app_id"/>
+
+        <activity
+            android:name=".MainActivity"
+            android:label="@string/app_name"
+            android:theme="@style/AppTheme.NoActionBar">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN"/>
+
+                <category android:name="android.intent.category.LAUNCHER"/>
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.facebook.FacebookActivity"
+            android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation"
+            android:label="@string/app_name"
+            android:theme="@android:style/Theme.Translucent.NoTitleBar"/>
+        <!--
+             The API key for Google Maps-based APIs is defined as a string resource.
+             (See the file "res/values/google_maps_api.xml").
+             Note that the API key is linked to the encryption key used to sign the APK.
+             You need a different API key for each encryption key, including the release key that is used to
+             sign the APK for publishing.
+             You can define the keys for the debug and release targets in src/debug/ and src/release/. 
+        -->
+        <meta-data
+            android:name="com.google.android.geo.API_KEY"
+            android:value="@string/google_maps_key"/>
+
+        <activity
+            android:name=".MapsActivity"
+            android:label="@string/title_activity_maps"
+            android:theme="@style/AppTheme.NoActionBar"/>
+        <activity
+            android:name=".GoogleSignActivity"
+            android:label="@string/title_activity_google_sign"
+            android:theme="@style/AppTheme.Transparent"/>
+        <activity
+            android:name=".FBLoginActivity"
+            android:theme="@style/AppTheme.Transparent"/>
+        <activity
+            android:name=".ProfileActivity"
+            android:label="@string/title_activity_profile"
+            android:parentActivityName=".MapsActivity"
+            android:theme="@style/AppTheme.NoActionBar">
+            <meta-data
+                android:name="android.support.PARENT_ACTIVITY"
+                android:value="com.cesta.cesta.MapsActivity"/>
+        </activity>
+    </application>
+
+</manifest>
Index: app/src/main/java/com/cesta/cesta/FBLoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cesta/cesta/FBLoginActivity.java	(revision )
+++ app/src/main/java/com/cesta/cesta/FBLoginActivity.java	(revision )
@@ -0,0 +1,218 @@
+package com.cesta.cesta;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+import android.util.Log;
+import android.view.View;
+import android.widget.Toast;
+
+import com.facebook.CallbackManager;
+import com.facebook.FacebookCallback;
+import com.facebook.FacebookException;
+import com.facebook.GraphRequest;
+import com.facebook.GraphResponse;
+import com.facebook.Profile;
+import com.facebook.ProfileTracker;
+import com.facebook.appevents.AppEventsLogger;
+import com.facebook.login.LoginManager;
+import com.facebook.login.LoginResult;
+import com.facebook.login.widget.LoginButton;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.Arrays;
+import java.util.List;
+
+public class FBLoginActivity extends AppCompatActivity {
+
+    public static final int RESULT_CODE_LOGGED_IN = 0x10;
+    public static final int RESULT_CODE_LOGGED_OUT = 0x11;
+    public static final String LOGGED = "Log";
+
+    public static final String LOG_IN = "Login";
+    public static final String LOG_OUT = "Logout";
+
+    private static final String TAG = "FBLoginActivity";
+
+    private CallbackManager callbackManager;
+    private List<String> permissions = Arrays.asList("public_profile", "user_friends", "email", "user_location");
+
+    private FacebookCallback<LoginResult> callback;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_fblogin);
+
+        callbackManager = CallbackManager.Factory.create();
+        callback = new FacebookCallback<LoginResult>() {
+            private ProfileTracker mProfileTracker;
+
+            @Override
+            public void onSuccess(final LoginResult loginResult) {
+                //AccessToken accessToken = loginResult.getAccessToken();
+                //textDetails = (TextView) findViewById(R.id.status);
+                Log.d(TAG, "onSuccess: loginResult = " + loginResult);
+                Profile profile = Profile.getCurrentProfile();
+                //final Intent i = new Intent();
+                final Account a = new Account(Account.Type.FaceBook);
+
+                if (profile == null) {
+                    mProfileTracker = new ProfileTracker() {
+                        @Override
+                        protected void onCurrentProfileChanged(Profile profile, Profile profile2) {
+                            //fblogin(profile2);
+                            Log.d(TAG, "onCurrentProfileChanged: got profile " + profile2);
+                            mProfileTracker.stopTracking();
+
+                            a.setName(profile2.getName());
+                            a.downloadImage(getApplicationContext(),
+                                    profile2.getProfilePictureUri(400, 400).getPath());
+
+							/*i.putExtra("Ac", a);
+                            i.putExtra(LOGGED, RESULT_CODE_LOGGED_IN);
+							if (a.getEmail() != null) {
+								setResult(RESULT_OK, i);
+								finish();
+							} else
+								Log.d(TAG, "onCurrentProfileChanged: Waiting for email.");*/
+                            startGraph(loginResult, a);
+                        }
+                    };
+                    mProfileTracker.startTracking();
+                } else {
+                    Log.d(TAG, "onSuccess: got profile directly");
+                    String full_name = profile.getName();
+                    Log.d(TAG, full_name);
+                    //fblogin(profile);
+
+                    a.setName(full_name);
+                    a.downloadImage(getApplicationContext(),
+                            profile.getProfilePictureUri(400, 400).getPath());
+
+					/*i.putExtra("Ac", a);
+					i.putExtra(LOGGED, RESULT_CODE_LOGGED_IN);*/
+                    startGraph(loginResult, a);
+                }
+            }
+
+            private void startGraph(LoginResult loginResult, final Account account) {
+                GraphRequest request = GraphRequest.newMeRequest(loginResult.getAccessToken(),
+                        new GraphRequest.GraphJSONObjectCallback() {
+                            @Override
+                            public void onCompleted(JSONObject object, GraphResponse response) {
+                                // Application code
+                                Log.v("LoginActivity", response.toString());
+                                try {
+                                    JSONObject jsonObject = response.getJSONObject();
+                                    Log.d(TAG, "jsonObj = " + jsonObject.toString());
+                                    String email = jsonObject.getString("email");
+
+                                    Toast.makeText(FBLoginActivity.this, "Email : " + email, Toast
+                                            .LENGTH_SHORT).show();
+                                    Log.d(TAG, "onCompleted: Email : " + email);
+                                    account.setEmail(email);
+                                    account.setGender(jsonObject.getString("gender"));
+									/*if (account.getName() != null) {
+										fbLoginDone = true;
+									}*/
+                                    Intent i = new Intent();
+                                    i.putExtra("Ac", account);
+                                    setResult(RESULT_OK, i);
+                                    finish();
+                                } catch (JSONException e) {
+                                    e.printStackTrace();
+                                    Toast.makeText(FBLoginActivity.this, "Error getting email..", Toast
+                                            .LENGTH_SHORT).show();
+                                }
+                            }
+                        });
+                Bundle parameters = new Bundle();
+                parameters.putString("fields", "id,name,email,gender,birthday");
+                request.setParameters(parameters);
+                request.executeAsync();
+            }
+
+            @Override
+            public void onCancel() {
+                Toast.makeText(FBLoginActivity.this, "Canceled by user.", Toast.LENGTH_SHORT).show();
+                Log.w(TAG, "onCancel: FB login canceled by User.");
+                setResult(RESULT_CANCELED);
+                finish();
+            }
+
+            @Override
+            public void onError(FacebookException error) {
+                Toast.makeText(FBLoginActivity.this, "Error couldn't log you in.", Toast.LENGTH_SHORT).show();
+                Log.e(TAG, "onError: FB login error", error);
+                setResult(RESULT_CANCELED);
+                finish();
+            }
+        };
+
+        LoginManager.getInstance().registerCallback(callbackManager, callback);
+
+        Intent i = getIntent();
+        if (i == null || i.getAction() == null) {
+            Log.w(TAG, "i is null || action is null");
+        } else if (i.getAction().equals(LOG_IN)) {
+            Log.d(TAG, "Facebook logging in...");
+            //onSignInClicked();
+            //loginButton.registerCallback(callbackManager, callback);
+			/*LoginManager loginManager = LoginManager.getInstance();
+			loginManager.registerCallback(callbackManager, callback);*/
+            Log.d(TAG, "onCreate: Callback registered. Logging in.");
+            LoginManager.getInstance().logInWithReadPermissions(this, permissions);
+            Log.d(TAG, "onCreate: Logged In");
+        } else if (i.getAction().equals(LOG_OUT)) {
+            Log.d(TAG, "Facebook logging out...");
+            //onSignOutClicked();
+            //loginButton.registerCallback(callbackManager, callback);
+            LoginManager loginManager = LoginManager.getInstance();
+            loginManager.registerCallback(callbackManager, callback);
+            loginManager.logOut();
+            setResult(RESULT_OK);
+            finish();
+            Log.d(TAG, "onCreate: FB log out successful.");
+		/*} else if (i.getAction().equals(GET_DATA)) {
+			Log.d(TAG, "Facebook getting data");
+			LoginManager.getInstance().logInWithReadPermissions(this, permissions);*/
+        } else
+            Log.w(TAG, "Unknown");
+    }
+
+    @Override
+    protected void onPause() {
+        super.onPause();
+        AppEventsLogger.deactivateApp(this);
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+        AppEventsLogger.activateApp(this);
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        Log.d(TAG, "onActivityResult:" + requestCode + ":" + resultCode + ":" + data);
+        callbackManager.onActivityResult(requestCode, resultCode, data);
+    }
+
+    @Deprecated
+    public void registerListener(final LoginButton button) {
+        button.setReadPermissions(permissions);
+        button.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                button.registerCallback(callbackManager, callback);
+				/*Intent i = new Intent(FBLoginActivity.this, FBLoginActivity.class);
+				i.setAction(LOG_IN);
+				startActivity(i);*/
+            }
+        });
+    }
+}
Index: app/src/main/java/com/cesta/cesta/MapsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cesta/cesta/MapsActivity.java	(revision )
+++ app/src/main/java/com/cesta/cesta/MapsActivity.java	(revision )
@@ -0,0 +1,367 @@
+package com.cesta.cesta;
+
+import android.Manifest;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.content.res.Configuration;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Color;
+import android.location.Location;
+import android.net.ConnectivityManager;
+import android.os.Bundle;
+import android.os.Handler;
+import android.support.annotation.NonNull;
+import android.support.design.widget.NavigationView;
+import android.support.design.widget.Snackbar;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v4.content.ContextCompat;
+import android.support.v4.widget.DrawerLayout;
+import android.support.v7.app.ActionBarDrawerToggle;
+import android.support.v7.app.AlertDialog;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.AppCompatSpinner;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.ArrayAdapter;
+import android.widget.ImageView;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.google.android.gms.maps.CameraUpdateFactory;
+import com.google.android.gms.maps.GoogleMap;
+import com.google.android.gms.maps.OnMapReadyCallback;
+import com.google.android.gms.maps.SupportMapFragment;
+import com.google.android.gms.maps.model.Circle;
+import com.google.android.gms.maps.model.CircleOptions;
+import com.google.android.gms.maps.model.LatLng;
+import com.google.android.gms.maps.model.Marker;
+import com.google.android.gms.maps.model.MarkerOptions;
+
+public class MapsActivity extends AppCompatActivity implements OnMapReadyCallback {
+
+    private static final String TAG = "MapsActivity";
+    private static final int MY_LOCATION_REQUEST_CODE = 0x21;
+    Marker userLocMarker;
+    //private static final int MY_LOCATION_REQUEST_CODE2 = 0x22;
+    private SupportMapFragment mapFragment;
+    private GoogleMap map;
+    private Snackbar snackbar;
+    private Account account;
+    private Bitmap profilePic;
+    //private GoogleApiClient mGoogleApiClient;
+    private DrawerLayout drawerLayout;
+    private ActionBarDrawerToggle drawerToggle;
+    private CharSequence drawerTitle = "Map";
+    private CharSequence title = "Drawer";
+    private LatLng loc;
+    private boolean start = true;
+    GoogleMap.OnMyLocationChangeListener myLocationChangeListener = new GoogleMap.OnMyLocationChangeListener() {
+        @Override
+        public void onMyLocationChange(Location location) {
+
+            double latitude = location.getLatitude();
+            double longitude = location.getLongitude();
+            loc = new LatLng(latitude, longitude);
+
+            map.clear();
+            Marker mMarker = map.addMarker(new MarkerOptions().position(loc).title("GET RIDES " +
+                    "FROM HERE").snippet("This is a snippet"));
+            Circle circle = map.addCircle(new CircleOptions().center(loc).radius(50).fillColor
+                    (Color.TRANSPARENT).strokeWidth(1).strokeColor(Color.GREEN));
+
+            if (map != null) {
+                //map.animateCamera(CameraUpdateFactory.newLatLngZoom(loc, 18.0f));
+                map.animateCamera(CameraUpdateFactory.newLatLng(loc));
+                if (start) {
+                    map.moveCamera(CameraUpdateFactory.newLatLngZoom(loc, 15.0f));
+                    start = false;
+                }
+            }
+        }
+    };
+    private TextView name;
+    private TextView email;
+    private ImageView profileImage;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.drawer_layout);
+
+        account = (Account) getIntent().getSerializableExtra("ac");
+        if (account != null) {
+            NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
+            View navView = navigationView.inflateHeaderView(R.layout.nav_header_main);
+            name = (TextView) navView.findViewById(R.id.name_nav);
+            if (name != null) {
+                name.setText(account.getName());
+            } else
+                Log.e(TAG, "onCreate: name is null");
+            email = (TextView) navView.findViewById(R.id.email_nav);
+            if (email != null) {
+                email.setText(account.getEmail());
+            } else
+                Log.e(TAG, "onCreate: email is null");
+
+            profilePic = BitmapFactory.decodeFile(account.getImagePath());
+            profileImage = (ImageView) navView.findViewById(R.id.profile_pic_nav);
+            if (profileImage != null) {
+                profileImage.setImageBitmap(profilePic);
+            } else
+                Log.e(TAG, "onCreate: profileImage is null");
+        }
+
+        final Toolbar actionBar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(actionBar);
+        //getSupportActionBar().show();
+        /*getSupportActionBar().show();
+        getSupportActionBar().setDisplayShowHomeEnabled(true);
+        getSupportActionBar().setHomeButtonEnabled(true);*/
+
+        FragmentTransaction transaction = getSupportFragmentManager()
+                .beginTransaction();
+
+        mapFragment = SupportMapFragment.newInstance();
+        transaction.replace(R.id.map, mapFragment);
+        transaction.commit();
+
+		new Handler().post(new Runnable() {
+			@Override
+			public void run() {
+				mapFragment.getMapAsync(MapsActivity.this);
+				map = mapFragment.getMap();
+
+                if (!isNetworkConnected()) {
+                    snackbar = Snackbar.make(actionBar, "Internet not connected.",
+                            Snackbar.LENGTH_INDEFINITE);
+                }
+			}
+		});
+
+        //mapFragment.getMapAsync(this);
+        //map = mapFragment.getMap();
+
+        drawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
+        drawerToggle = new ActionBarDrawerToggle(this, drawerLayout, actionBar,
+                R.string.drawer_open, R.string.drawer_close) {
+            @Override
+            public void onDrawerOpened(View drawerView) {
+                super.onDrawerOpened(drawerView);
+                //getSupportActionBar().setTitle(title);
+                supportInvalidateOptionsMenu();
+            }
+
+            @Override
+            public void onDrawerClosed(View drawerView) {
+                super.onDrawerClosed(drawerView);
+                //getSupportActionBar().setTitle(drawerTitle);
+                supportInvalidateOptionsMenu();
+            }
+        };
+        drawerLayout.setDrawerListener(drawerToggle);
+
+        ((NavigationView) findViewById(R.id.nav_view)).setNavigationItemSelectedListener(
+                new NavigationView.OnNavigationItemSelectedListener() {
+                    @Override
+                    public boolean onNavigationItemSelected(MenuItem menuItem) {
+                        menuItem.setChecked(true);
+                        switch (menuItem.getItemId()) {
+                            case R.id.map_item:
+                                /*transaction = getSupportFragmentManager()
+                                        .beginTransaction();
+
+                                mapFragment = SupportMapFragment.newInstance();
+
+                                // Replace whatever is in the fragment_container view with this fragment,
+                                // and add the transaction to the back stack if needed
+                                transaction.replace(R.id.map, mapFragment);
+                                //transaction.addToBackStack(null);
+
+                                // Commit the transaction
+                                transaction.commit();
+
+                                // Obtain the SupportMapFragment and get notified when the map is ready to be used.
+                                // SupportMapFragment mapFragment = (SupportMapFragment)
+                                //    getSupportFragmentManager().findFragmentById(R.id.map);
+                                mapFragment.getMapAsync(MapsActivity.this);
+
+                                map = mapFragment.getMap();*/
+                                break;
+                            case R.id.profile_item:
+                                // TODO: add profile.
+                                /*transaction = getSupportFragmentManager()
+                                        .beginTransaction();
+
+                                // Replace whatever is in the fragment_container view with this fragment,
+                                // and add the transaction to the back stack if needed
+                                transaction.replace(R.id.map, ProfileFragment.makeProfileFragment
+                                        (account, profilePic));
+                                //transaction.addToBackStack(null);
+
+                                // Commit the transaction
+                                transaction.commit();*/
+                                Intent intent = new Intent(MapsActivity.this, ProfileActivity.class);
+                                intent.putExtra("ac", account);
+                                startActivity(intent);
+                                break;
+                        }
+                        drawerLayout.closeDrawers();
+                        return true;
+                    }
+                }
+        );
+
+        findViewById(R.id.fab).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                showDialogBox();
+            }
+        });
+
+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)
+                == PackageManager.PERMISSION_GRANTED) {
+            //map.setMyLocationEnabled(true);
+            new Handler().post(new Runnable() {
+                @Override
+                public void run() {
+                    map.setMyLocationEnabled(true);
+                }
+            });
+        } else {
+            // Show rationale and request permission.
+            Log.d(TAG, "Asking permissions...");
+            ActivityCompat.requestPermissions(this,
+                    new String[]{Manifest.permission.ACCESS_FINE_LOCATION},
+                    MY_LOCATION_REQUEST_CODE);
+        }
+    }
+
+    private void showDialogBox() {
+        AlertDialog.Builder b = new AlertDialog.Builder(this);
+        View dialog = View.inflate(this, R.layout.dialog_layout, null);
+        //b.setCustomTitle(dialog);
+        b.setView(dialog);
+
+        AppCompatSpinner spinner = (AppCompatSpinner) dialog.findViewById(R.id.seat_spinner);
+        // Create an ArrayAdapter using the string array and a default spinner layout
+        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this,
+                R.array.seats, android.R.layout.simple_spinner_item);
+        // Specify the layout to use when the list of choices appears
+        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+        // Apply the adapter to the spinner
+        spinner.setAdapter(adapter);
+
+        b.setPositiveButton("Save", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                Toast.makeText(MapsActivity.this, "Contents saved (Not really).", Toast.LENGTH_SHORT).show();
+                Log.d(TAG, "Contents saved.");
+            }
+        });
+        b.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                Toast.makeText(MapsActivity.this, "Canceled.", Toast.LENGTH_SHORT).show();
+                Log.d(TAG, "Canceled.");
+            }
+        });
+        b.show();
+    }
+
+    /**
+     * Manipulates the map once available.
+     * This callback is triggered when the map is ready to be used.
+     * This is where we can add markers or lines, add listeners or move the camera. In this case,
+     * we just add a marker near Sydney, Australia.
+     * If Google Play services is not installed on the device, the user will be prompted to install
+     * it inside the SupportMapFragment. This method will only be triggered once the user has
+     * installed Google Play services and returned to the app.
+     */
+    @Override
+    public void onMapReady(GoogleMap googleMap) {
+        map = googleMap;
+        //map.setMyLocationEnabled(true);
+        map.setOnMyLocationChangeListener(myLocationChangeListener);  //For current location
+
+        map.setOnMapClickListener(new GoogleMap.OnMapClickListener() {
+            @Override
+            public void onMapClick(LatLng latLng) {
+                if (userLocMarker == null) {
+                    userLocMarker = map.addMarker(new MarkerOptions().position(latLng));
+                }
+                userLocMarker.setPosition(latLng);
+                userLocMarker.setTitle("Starting location");
+            }
+        });
+
+        // Add a marker in Sydney and move the camera
+        /*LatLng sydney = new LatLng(-34, 151);
+        map.addMarker(new MarkerOptions().position(sydney).title("Marker in Sydney"));
+        map.moveCamera(CameraUpdateFactory.newLatLng(sydney));*/
+    }
+
+    @Override
+    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,
+                                           @NonNull int[] grantResults) {
+        if (requestCode == MY_LOCATION_REQUEST_CODE) {
+            if (permissions[0].equals(Manifest.permission.ACCESS_FINE_LOCATION) &&
+                    grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+                map.setMyLocationEnabled(true);
+            } else {
+                // Permission was denied. Display an error message.
+                Log.w(TAG, "Location Permission denied.");
+            }
+        }
+    }
+
+    @Override
+    protected void onPostCreate(Bundle savedInstanceState) {
+        super.onPostCreate(savedInstanceState);
+        // Sync the toggle state after onRestoreInstanceState has occurred.
+        drawerToggle.syncState();
+    }
+
+    @Override
+    public void onConfigurationChanged(Configuration newConfig) {
+        super.onConfigurationChanged(newConfig);
+        drawerToggle.onConfigurationChanged(newConfig);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        // Pass the event to ActionBarDrawerToggle, if it returns
+        // true, then it has handled the app icon touch event
+        if (drawerToggle.onOptionsItemSelected(item)) {
+            return true;
+        }
+        // Handle your other action bar items...
+
+        return super.onOptionsItemSelected(item);
+    }
+
+    private boolean isNetworkConnected() {
+        ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
+        return cm.getActiveNetworkInfo() != null;
+    }
+
+    /* Facebook App Tracking
+    @Override
+    protected void onPause() {
+        super.onPause();
+
+        AppEventsLogger.deactivateApp(this);
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+
+        AppEventsLogger.activateApp(this);
+    }*/
+}
\ No newline at end of file
Index: app/src/main/res/layout/layout_signup.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_signup.xml	(revision )
+++ app/src/main/res/layout/layout_signup.xml	(revision )
@@ -0,0 +1,61 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context="com.pheah.pheah_android.LoginActivity">
+
+    <TextView
+        android:id="@+id/status"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true"
+        android:layout_centerHorizontal="true"
+        android:text="text" />
+
+    <com.google.android.gms.common.SignInButton
+        android:id="@+id/sign_in"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerHorizontal="true"
+        android:layout_centerVertical="true" />
+
+    <com.facebook.login.widget.LoginButton
+        android:id="@+id/login_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/sign_in"
+        android:layout_centerHorizontal="true"
+        android:layout_gravity="center_horizontal"
+        android:layout_marginTop="128dp" />
+
+    <Button
+        android:id="@+id/sign_out"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/status"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="250dp"
+        android:text="Sign out" />
+
+    <Button
+        android:id="@+id/disconnect_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/sign_out"
+        android:layout_centerHorizontal="true"
+        android:text="Disconnect" />
+
+    <Button
+        android:id="@+id/map_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/status"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="67dp"
+        android:text="Open Map" />
+
+</RelativeLayout>
Index: app/src/main/res/layout/navigation_drawer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/navigation_drawer.xml	(revision )
+++ app/src/main/res/layout/navigation_drawer.xml	(revision )
@@ -0,0 +1,23 @@
+<android.support.v4.widget.DrawerLayout android:id="@+id/drawer_layout"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <!-- The main content view -->
+    <FrameLayout
+        android:id="@+id/content_frame"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+    <!-- The navigation drawer -->
+    <ListView
+        android:id="@+id/left_drawer"
+        android:layout_width="240dp"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:background="#ffffff"
+        android:choiceMode="singleChoice"
+        android:divider="@android:color/transparent"
+        android:dividerHeight="0dp" />
+
+</android.support.v4.widget.DrawerLayout>
\ No newline at end of file
Index: app/src/main/java/com/cesta/cesta/Pref.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cesta/cesta/Pref.java	(revision )
+++ app/src/main/java/com/cesta/cesta/Pref.java	(revision )
@@ -0,0 +1,8 @@
+package com.cesta.cesta;
+
+/**
+ * Created by siddharths2710 on 22/12/15.
+ */
+public enum Pref {
+
+}
Index: app/src/main/res/layout/fragment_map.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_map.xml	(revision )
+++ app/src/main/res/layout/fragment_map.xml	(revision )
@@ -0,0 +1,21 @@
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.pheah.pheah_android.MapFragment">
+
+
+    <TextView
+        android:id="@+id/alltext"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center" />
+
+    <Button
+        android:id="@+id/sign"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_horizontal|bottom"
+        android:text="Open Sign." />
+
+</FrameLayout>
Index: app/google-services.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/google-services.json	(revision )
+++ app/google-services.json	(revision )
@@ -0,0 +1,91 @@
+{
+  "project_info": {
+    "project_id": "cesta-1",
+    "project_number": "638384476598",
+    "name": "cesta"
+  },
+  "client": [
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:638384476598:android:a4687db758adee52",
+        "client_id": "android:com.pheah.pheah_android",
+        "client_type": 1,
+        "android_client_info": {
+          "package_name": "com.pheah.pheah_android"
+        }
+      },
+      "oauth_client": [
+        {
+          "client_id": "638384476598-n9delsjna253e3qc364ajj04abl088r8.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.pheah.pheah_android",
+            "certificate_hash": "EDC464CAA7B1C90885EB98D808A57A63CB31E5A6"
+          }
+        }
+      ],
+      "api_key": [],
+      "services": {
+        "analytics_service": {
+          "status": 1
+        },
+        "cloud_messaging_service": {
+          "status": 1,
+          "apns_config": []
+        },
+        "appinvite_service": {
+          "status": 2,
+          "other_platform_oauth_client": []
+        },
+        "google_signin_service": {
+          "status": 2
+        },
+        "ads_service": {
+          "status": 1
+        }
+      }
+    },
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:638384476598:android:b2d47491cbd1afb5",
+        "client_id": "android:com.cesta.cesta",
+        "client_type": 1,
+        "android_client_info": {
+          "package_name": "com.cesta.cesta"
+        }
+      },
+      "oauth_client": [
+        {
+          "client_id": "638384476598-5rmn6j2ucppsqh26rlgbtah2ff9voqrj.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.cesta.cesta",
+            "certificate_hash": "EDC464CAA7B1C90885EB98D808A57A63CB31E5A6"
+          }
+        }
+      ],
+      "api_key": [],
+      "services": {
+        "analytics_service": {
+          "status": 1
+        },
+        "cloud_messaging_service": {
+          "status": 1,
+          "apns_config": []
+        },
+        "appinvite_service": {
+          "status": 2,
+          "other_platform_oauth_client": []
+        },
+        "google_signin_service": {
+          "status": 2
+        },
+        "ads_service": {
+          "status": 1
+        }
+      }
+    }
+  ],
+  "client_info": [],
+  "ARTIFACT_VERSION": "1"
+}
\ No newline at end of file
Index: app/src/main/java/com/cesta/cesta/GoogleSignActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cesta/cesta/GoogleSignActivity.java	(revision )
+++ app/src/main/java/com/cesta/cesta/GoogleSignActivity.java	(revision )
@@ -0,0 +1,542 @@
+package com.cesta.cesta;
+
+import android.Manifest;
+import android.app.Activity;
+import android.app.ProgressDialog;
+import android.content.Context;
+import android.content.ContextWrapper;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.IntentSender;
+import android.content.SharedPreferences;
+import android.content.pm.PackageManager;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.content.ContextCompat;
+import android.support.v7.app.AppCompatActivity;
+import android.util.Log;
+import android.widget.Toast;
+
+import com.google.android.gms.common.ConnectionResult;
+import com.google.android.gms.common.GoogleApiAvailability;
+import com.google.android.gms.common.Scopes;
+import com.google.android.gms.common.api.GoogleApiClient;
+import com.google.android.gms.common.api.Scope;
+import com.google.android.gms.plus.Plus;
+import com.google.android.gms.plus.model.people.Person;
+
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.URL;
+
+public class GoogleSignActivity extends AppCompatActivity implements
+        ActivityCompat.OnRequestPermissionsResultCallback,
+        GoogleApiClient.ConnectionCallbacks,
+        GoogleApiClient.OnConnectionFailedListener {
+
+    public static final int RESULT_CODE_LOGGED_IN = 0x10;
+    public static final int RESULT_CODE_LOGGED_OUT = 0x11;
+
+    public static final String PHOTO_URL = "photoUrl";
+    public static final String EMAIL = "email";
+    public static final String NAME = "name";
+
+    public static final String PREF = "com.pheah.pheah_android.PREF";
+    public static final String LOGGED = "Log";
+    public static final String SIGN_IN = "Login";
+    public static final String SIGN_OUT = "Signout";
+    public static final String DISCONNECT = "Disconnect";
+    private static final String TAG = "GoogleSignActivity";
+    /* RequestCode for resolutions involving sign-in */
+    private static final int RC_SIGN_IN = 1;
+    /* RequestCode for resolutions to get GET_ACCOUNTS permission on M */
+    private static final int RC_PERM_GET_ACCOUNTS = 2;
+    /* Keys for persisting instance variables in savedInstanceState */
+    private static final String KEY_IS_RESOLVING = "is_resolving";
+    private static final String KEY_SHOULD_RESOLVE = "should_resolve";
+    /* Client for accessing Google APIs */
+    private GoogleApiClient mGoogleApiClient;
+    // [START resolution_variables]
+    /* Is there a ConnectionResult resolution in progress? */
+    private boolean mIsResolving = false;
+    // [END resolution_variables]
+    /* Should we automatically resolve ConnectionResults when possible? */
+    private boolean mShouldResolve = false;
+
+    //private boolean startMap = true;
+    private ProgressDialog dialog;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_google_sign);
+
+        try {
+            getSupportActionBar().hide();
+        } catch (NullPointerException e) {
+            e.printStackTrace();
+        }
+
+        // Restore from saved instance state
+        // [START restore_saved_instance_state]
+        if (savedInstanceState != null) {
+            mIsResolving = savedInstanceState.getBoolean(KEY_IS_RESOLVING);
+            mShouldResolve = savedInstanceState.getBoolean(KEY_SHOULD_RESOLVE);
+            //startMap = savedInstanceState.getBoolean(ARG_SIGN_UP, true);
+        }
+        // [END restore_saved_instance_state]
+
+        // Set up button click listeners
+        /*findViewById(R.id.sign_in).setOnClickListener(this);
+        findViewById(R.id.sign_out).setOnClickListener(this);
+        findViewById(R.id.disconnect_button).setOnClickListener(this);
+        findViewById(R.id.map_button).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                //startActivity(new Intent(this, UserActivity.class)); //TODO: Make Fragment.
+                //((MainActivity) this).openMap(new MapFragment());
+            }
+        });
+
+        // Large sign-in
+        ((SignInButton) findViewById(R.id.sign_in)).setSize(SignInButton.SIZE_WIDE);
+
+        // Start with sign-in button disabled until sign-in either succeeds or fails
+        findViewById(R.id.sign_in).setEnabled(false);
+
+        // Set up view instances
+        //mStatus = (TextView) findViewById(R.id.status);
+        */
+
+        // [START create_google_api_client]
+        // Build GoogleApiClient with access to basic profile
+        mGoogleApiClient = new GoogleApiClient.Builder(this)
+                .addConnectionCallbacks(this)
+                .addOnConnectionFailedListener(this)
+                .addApi(Plus.API)
+                .addScope(new Scope(Scopes.PROFILE))
+                .addScope(new Scope(Scopes.EMAIL))
+                .build();
+        // [END create_google_api_client]
+
+        Intent i = getIntent();
+        if (i == null || i.getAction() == null) {
+            Log.w(TAG, "i is null");
+        } else if (i.getAction().equals(SIGN_IN)) {
+            onSignInClicked();
+            dialog = ProgressDialog.show(this, "Signing you in...", "Please wait while we authenticate " +
+                    "your account", false, true, new DialogInterface.OnCancelListener() {
+                @Override
+                public void onCancel(DialogInterface dialogInterface) {
+                    setResult(RESULT_CANCELED);
+                    finish();
+                }
+            });
+            Log.d(TAG, "Google signing in...");
+        } else if (i.getAction().equals(SIGN_OUT)) {
+            onSignOutClicked();
+            dialog = ProgressDialog.show(this, "Signing you out...", "Please wait", false, true,
+                    new DialogInterface.OnCancelListener() {
+                @Override
+                public void onCancel(DialogInterface dialogInterface) {
+                    setResult(RESULT_CANCELED);
+                    finish();
+                }
+            });
+            Log.d(TAG, "Google signing out...");
+        } else if (i.getAction().equals(DISCONNECT)) {
+            onDisconnectClicked();
+            dialog = ProgressDialog.show(this, "Signing you out...", "Please wait", false, true,
+                    new DialogInterface.OnCancelListener() {
+                @Override
+                public void onCancel(DialogInterface dialogInterface) {
+                    setResult(RESULT_CANCELED);
+                    finish();
+                }
+            });
+            Log.d(TAG, "Google Disconnecting...");
+        } else
+            Log.w(TAG, "Unknown");
+    }
+
+    private void updateUI(boolean isSignedIn) {
+        if (isSignedIn) {
+            Person currentPerson = Plus.PeopleApi.getCurrentPerson(mGoogleApiClient);
+            if (currentPerson != null) {
+                // Show signed-in user's name
+                String name = currentPerson.getDisplayName();
+                //mStatus.setText(name);//getString(R.string.signed_in_fmt, name));
+                Log.d(TAG, "Signed in: name");
+
+                // Show users' email address (which requires GET_ACCOUNTS permission)
+                if (checkAccountsPermission()) {
+                    String currentAccount = Plus.AccountApi.getAccountName(mGoogleApiClient);
+                    //mStatus.setText(mStatus.getText() + currentAccount);
+                    Log.d(TAG, "Signed in email : " + currentAccount);
+                }
+            } else {
+                // If getCurrentPerson returns null there is generally some error with the
+                // configuration of the application (invalid Client ID, Plus API not enabled, etc).
+                Log.e(TAG, "Null person");
+                //mStatus.setText("Null person");
+            }
+
+            /*// Set button visibility
+            findViewById(R.id.sign_in).setVisibility(View.GONE);
+            //findViewById(R.id.sign_out_and_disconnect).setVisibility(View.VISIBLE);
+            findViewById(R.id.sign_out).setVisibility(View.VISIBLE);
+            findViewById(R.id.disconnect_button).setVisibility(View.VISIBLE);*/
+        } /*else {
+            // Show signed-out message and clear email field
+            //mStatus.setText("Please Sign in");
+            //((TextView) findViewById(R.id.email)).setText("");
+
+            // Set button visibility
+            findViewById(R.id.sign_in).setEnabled(true);
+            findViewById(R.id.sign_in).setVisibility(View.VISIBLE);
+            //findViewById(R.id.sign_out_and_disconnect).setVisibility(View.GONE);
+            findViewById(R.id.sign_out).setVisibility(View.GONE);
+            findViewById(R.id.disconnect_button).setVisibility(View.GONE);
+        }*/
+    }
+
+    /**
+     * Check if we have the GET_ACCOUNTS permission and request it if we do not.
+     *
+     * @return true if we have the permission, false if we do not.
+     */
+    private boolean checkAccountsPermission() {
+        final String perm = Manifest.permission.GET_ACCOUNTS;
+        int permissionCheck = ContextCompat.checkSelfPermission(this, perm);
+        Log.d(TAG, "checkAccountsPermission()");
+        if (permissionCheck == PackageManager.PERMISSION_GRANTED) {
+            // We have the permission
+            Log.d(TAG, "checkAccountsPermission(): granted");
+            //showSignedInUI();
+            return true;
+        } else if (ActivityCompat.shouldShowRequestPermissionRationale(this, perm)) {
+            // Need to show permission rationale, display   a snackbar and then request
+            // the permission again when the snackbar is dismissed.
+            /*Snackbar.make(findViewById(R.id.main_layout),
+                    R.string.contacts_permission_rationale,
+                    Snackbar.LENGTH_INDEFINITE)
+					.setAction(android.R.string.ok, new View.OnClickListener() {
+						@Override
+						public void onClick(View v) {
+							// Request the permission again.
+							ActivityCompat.requestPermissions(this,
+									new String[]{perm},
+									RC_PERM_GET_ACCOUNTS);
+						}
+					}).show();*/
+            Log.d(TAG, "checkAccountsPermission(): asking..");
+            ActivityCompat.requestPermissions(this,
+                    new String[]{perm},
+                    RC_PERM_GET_ACCOUNTS);
+            return false;
+        } else {
+            // No explanation needed, we can request the permission.
+            Log.d(TAG, "checkAccountsPermission(): asking...");
+            ActivityCompat.requestPermissions(this,
+                    new String[]{perm},
+                    RC_PERM_GET_ACCOUNTS);
+            return false;
+        }
+        /*else {
+			Toast.makeText(this, "Please grant all the required permissions", Toast.LENGTH_SHORT).show();
+			return false;
+		}*/
+    }
+
+    @Override
+    public void onRequestPermissionsResult(int requestCode, @NonNull String permissions[],
+                                           @NonNull int[] grantResults) {
+        Log.d(TAG, "onRequestPermissionsResult:" + requestCode);
+        if (requestCode == RC_PERM_GET_ACCOUNTS) {
+            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+                showSignedInUI();
+            } else {
+                Log.e(TAG, "GET_ACCOUNTS Permission Denied.");
+                Toast.makeText(this, "Please grant the required permissions", Toast.LENGTH_LONG).show();
+            }
+        }
+    }
+
+    private void showSignedInUI() {
+        updateUI(true);
+
+        if (checkAccountsPermission()) {
+            Person currentPerson = Plus.PeopleApi.getCurrentPerson(mGoogleApiClient);
+            Log.d(TAG, "person = " + currentPerson);// + ", m = " + startMap);
+            if (currentPerson != null) {
+                SharedPreferences p = getSharedPreferences(PREF, Context.MODE_PRIVATE);
+                SharedPreferences.Editor e = p.edit();
+                e.putString(NAME, currentPerson.getDisplayName());
+                e.putString(EMAIL, Plus.AccountApi.getAccountName(mGoogleApiClient));
+                e.putString(PHOTO_URL, currentPerson.getImage().getUrl());
+                e.apply();
+                /*if (startMap) {
+                    *//*startActivity(new Intent(this, UserActivity.class)); //TODO: Make Fragment.
+                    finish();*//*
+                    //((MainActivity) this).openMap(new MapFragment());
+                }*/
+                Intent i = new Intent();
+                final Account a = new Account(Account.Type.Google);
+                a.setName(currentPerson.getDisplayName());
+                a.setEmail(Plus.AccountApi.getAccountName(mGoogleApiClient));
+
+                new AsyncTask<String, Void, Bitmap>() {
+
+                    @Override
+                    protected Bitmap doInBackground(String... params) {
+
+                        try {
+                            URL url = new URL(params[0]);
+                            InputStream in = url.openStream();
+                            return BitmapFactory.decodeStream(in);
+                        } catch (Exception e) {
+                            Log.w(TAG, "Error getting image");
+                        }
+                        return null;
+                    }
+
+                    @Override
+                    protected void onPostExecute(Bitmap bitmap) {
+                        ContextWrapper cw = new ContextWrapper(getApplicationContext());
+                        // path to /data/data/yourapp/app_data/imageDir
+                        File directory = cw.getDir("imageDir", Context.MODE_PRIVATE);
+                        // Create imageDir
+                        File mypath = new File(directory, "profile.png");
+
+                        FileOutputStream fos = null;
+                        try {
+                            fos = new FileOutputStream(mypath);
+                            // Use the compress method on the BitMap object to write image to the OutputStream
+                            bitmap.compress(Bitmap.CompressFormat.PNG, 100, fos);
+                            Log.d(TAG, "onPostExecute: File saved as " + mypath.getAbsolutePath());
+                        } catch (Exception e) {
+                            e.printStackTrace();
+                            Log.e(TAG, "onPostExecute: Unable to get the files");
+                        } finally {
+                            try {
+                                fos.close();
+                            } catch (IOException e1) {
+                                e1.printStackTrace();
+                            }
+                        }
+                        String path = directory.getAbsolutePath();
+                        a.setImagePath(path);
+                    }
+                }.execute(currentPerson.getImage().getUrl());
+
+                i.putExtra("Ac", a);
+                i.putExtra(LOGGED, RESULT_CODE_LOGGED_IN);
+                setResult(RESULT_OK, i);
+                if (dialog != null) {
+                    dialog.dismiss();
+                }
+                finish();
+            } else
+                Log.w(TAG, "showSignedInUI: Got a null person");
+        } else
+            Log.w(TAG, "showSignedInUI: Permissions denied");
+    }
+
+    private void showSignedOutUI() {
+        SharedPreferences sh = getSharedPreferences(PREF, Context.MODE_PRIVATE);
+        SharedPreferences.Editor editor = sh.edit();
+        editor.remove(NAME);
+        editor.remove(EMAIL);
+        editor.remove(PHOTO_URL);
+        editor.apply();
+        updateUI(false);
+        Intent i = new Intent();
+        i.putExtra(LOGGED, RESULT_CODE_LOGGED_OUT);
+        setResult(RESULT_OK, i);
+        if (dialog != null) {
+            dialog.dismiss();
+        }
+        finish();
+    }
+
+    // [START on_start_on_stop]
+    @Override
+    public void onStart() {
+        super.onStart();
+        mGoogleApiClient.connect();
+    }
+
+    @Override
+    public void onStop() {
+        super.onStop();
+        mGoogleApiClient.disconnect();
+    }
+
+    // [END on_start_on_stop]
+    // [START on_save_instance_state]
+    @Override
+    public void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+        outState.putBoolean(KEY_IS_RESOLVING, mIsResolving);
+        outState.putBoolean(KEY_SHOULD_RESOLVE, mShouldResolve);
+    }
+    // [END on_save_instance_state]
+
+    // [START on_activity_result]
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        Log.d(TAG, "onActivityResult:" + requestCode + ":" + resultCode + ":" + data);
+
+        if (requestCode == RC_SIGN_IN) {
+            // If the error resolution was not successful we should not resolve further.
+            if (resultCode != Activity.RESULT_OK) {
+                mShouldResolve = false;
+            }
+
+            mIsResolving = false;
+            mGoogleApiClient.connect();
+        }
+    }
+    // [END on_activity_result]
+
+    // [START on_connected]
+    @Override
+    public void onConnected(Bundle bundle) {
+        // onConnected indicates that an account was selected on the device, that the selected
+        // account has granted any requested permissions to our app and that we were able to
+        // establish a service connection to Google Play services.
+        Log.d(TAG, "onConnected:" + bundle);
+        mShouldResolve = false;
+
+        // Show the signed-in UI
+        showSignedInUI();
+    }
+    // [END on_connected]
+
+    @Override
+    public void onConnectionSuspended(int i) {
+        // The connection to Google Play services was lost. The GoogleApiClient will automatically
+        // attempt to re-connect. Any UI elements that depend on connection to Google APIs should
+        // be hidden or disabled until onConnected is called again.
+        Log.w(TAG, "onConnectionSuspended:" + i);
+    }
+
+    // [START on_connection_failed]
+    @Override
+    public void onConnectionFailed(ConnectionResult connectionResult) {
+        // Could not connect to Google Play Services.  The user needs to select an account,
+        // grant permissions or resolve an error in order to sign in. Refer to the javadoc for
+        // ConnectionResult to see possible error codes.
+        Log.d(TAG, "onConnectionFailed:" + connectionResult);
+
+        if (!mIsResolving && mShouldResolve) {
+            Log.d(TAG, "inside first if");
+            if (connectionResult.hasResolution()) {
+                try {
+                    connectionResult.startResolutionForResult(this, RC_SIGN_IN);
+                    mIsResolving = true;
+                    Log.d(TAG, "inside try and second if");
+                } catch (IntentSender.SendIntentException e) {
+                    Log.e(TAG, "Could not resolve ConnectionResult.", e);
+                    mIsResolving = false;
+                    mGoogleApiClient.connect();
+                }
+            } else {
+                // Could not resolve the connection result, show the user an
+                // error dialog.
+                Log.d(TAG, "Error dialog.");
+                showErrorDialog(connectionResult);
+            }
+        } else {
+            Log.d(TAG, "Sign out ui");
+            // Show the signed-out UI
+            showSignedOutUI();
+        }
+    }
+    // [END on_connection_failed]
+
+    private void showErrorDialog(ConnectionResult connectionResult) {
+        GoogleApiAvailability apiAvailability = GoogleApiAvailability.getInstance();
+        int resultCode = apiAvailability.isGooglePlayServicesAvailable(this);
+
+        if (resultCode != ConnectionResult.SUCCESS) {
+            if (apiAvailability.isUserResolvableError(resultCode)) {
+                apiAvailability.getErrorDialog(this, resultCode, RC_SIGN_IN,
+                        new DialogInterface.OnCancelListener() {
+                            @Override
+                            public void onCancel(DialogInterface dialog) {
+                                mShouldResolve = false;
+                                showSignedOutUI();
+                            }
+                        }).show();
+            } else {
+                Log.w(TAG, "Google Play Services Error:" + connectionResult);
+                String errorString = apiAvailability.getErrorString(resultCode);
+                Toast.makeText(this, errorString, Toast.LENGTH_SHORT).show();
+
+                mShouldResolve = false;
+                showSignedOutUI();
+            }
+        }
+    }
+
+    /*// [START on_click]
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()) {
+            case R.id.sign_in:
+                onSignInClicked();
+                break;
+            case R.id.sign_out:
+                onSignOutClicked();
+                break;
+            case R.id.disconnect_button:
+                onDisconnectClicked();
+                break;
+        }
+    }
+    // [END on_click]*/
+
+    // [START on_sign_in_clicked]
+    private void onSignInClicked() {
+        // User clicked the sign-in button, so begin the sign-in process and automatically
+        // attempt to resolve any errors that occur.
+        mShouldResolve = true;
+        mGoogleApiClient.connect();
+    }
+    // [END on_sign_in_clicked]
+
+    // [START on_sign_out_clicked]
+    private void onSignOutClicked() {
+        // Clear the default account so that GoogleApiClient will not automatically
+        // connect in the future.
+        if (mGoogleApiClient.isConnected()) {
+            Plus.AccountApi.clearDefaultAccount(mGoogleApiClient);
+            mGoogleApiClient.disconnect();
+        }
+
+        showSignedOutUI();
+    }
+    // [END on_sign_out_clicked]
+
+    // [START on_disconnect_clicked]
+    private void onDisconnectClicked() {
+        // Revoke all granted permissions and clear the default account.  The user will have
+        // to pass the consent screen to sign in again.
+        if (mGoogleApiClient.isConnected()) {
+            Plus.AccountApi.clearDefaultAccount(mGoogleApiClient);
+            Plus.AccountApi.revokeAccessAndDisconnect(mGoogleApiClient);
+            mGoogleApiClient.disconnect();
+        }
+
+        showSignedOutUI();
+    }
+    // [END on_disconnect_clicked]
+}
Index: app/src/main/res/layout/content_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/content_profile.xml	(revision )
+++ app/src/main/res/layout/content_profile.xml	(revision )
@@ -0,0 +1,96 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v7.widget.CardView
+    android:id="@+id/profile_cardview"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:card_view="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    card_view:cardCornerRadius="4dp"
+    >
+<LinearLayout
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    tools:context="com.cesta.cesta.ProfileActivity">
+
+    <FrameLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <ImageView
+            android:id="@+id/profile_pic"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:contentDescription="Profile Picture"
+            android:paddingTop="@dimen/nav_header_vertical_spacing"
+            android:src="@android:drawable/sym_def_app_icon"/>
+
+    </FrameLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingBottom="10dp"
+            android:paddingLeft="10dp"
+            android:paddingRight="10dp"
+            android:paddingStart="10dp"
+            android:paddingTop="@dimen/nav_header_vertical_spacing"
+            android:text="Name: "
+            android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
+
+        <TextView
+            android:id="@+id/name"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingBottom="10dp"
+            android:paddingLeft="10dp"
+            android:paddingRight="10dp"
+            android:paddingStart="10dp"
+            android:paddingTop="@dimen/nav_header_vertical_spacing"
+            android:text="Android Studio"
+            android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingBottom="10dp"
+            android:paddingLeft="10dp"
+            android:paddingRight="10dp"
+            android:paddingStart="10dp"
+            android:text="Email: " />
+
+        <TextView
+            android:id="@+id/email"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingBottom="10dp"
+            android:paddingLeft="10dp"
+            android:paddingRight="10dp"
+            android:paddingStart="10dp"
+            android:text="android.studio@android.com" />
+    </LinearLayout>
+
+    <Button
+        android:id="@+id/sign_out"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Sign out." />
+
+    <Button
+        android:id="@+id/log_out"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Log out." />
+
+</LinearLayout>
+</android.support.v7.widget.CardView>
\ No newline at end of file
Index: app/app.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app.iml	(revision )
+++ app/app.iml	(revision )
@@ -0,0 +1,152 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":app" external.linked.project.path="$MODULE_DIR$" external.root.project.path="$MODULE_DIR$/.." external.system.id="GRADLE" external.system.module.group="CestaAndroid" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="android-gradle" name="Android-Gradle">
+      <configuration>
+        <option name="GRADLE_PROJECT_PATH" value=":app" />
+      </configuration>
+    </facet>
+    <facet type="android" name="Android">
+      <configuration>
+        <option name="SELECTED_BUILD_VARIANT" value="debug" />
+        <option name="SELECTED_TEST_ARTIFACT" value="_android_test_" />
+        <option name="ASSEMBLE_TASK_NAME" value="assembleDebug" />
+        <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugSources" />
+        <option name="ASSEMBLE_TEST_TASK_NAME" value="assembleDebugAndroidTest" />
+        <option name="COMPILE_JAVA_TEST_TASK_NAME" value="compileDebugAndroidTestSources" />
+        <afterSyncTasks>
+          <task>generateDebugAndroidTestSources</task>
+          <task>generateDebugSources</task>
+        </afterSyncTasks>
+        <option name="ALLOW_USER_CONFIGURATION" value="false" />
+        <option name="MANIFEST_FILE_RELATIVE_PATH" value="/src/main/AndroidManifest.xml" />
+        <option name="RES_FOLDER_RELATIVE_PATH" value="/src/main/res" />
+        <option name="RES_FOLDERS_RELATIVE_PATH" value="file://$MODULE_DIR$/src/main/res;file://$MODULE_DIR$/src/debug/res" />
+        <option name="ASSETS_FOLDER_RELATIVE_PATH" value="/src/main/assets" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7" inherit-compiler-output="false">
+    <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
+    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/androidTest/debug" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/google-services/debug" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/debug" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/debug" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/androidTest/debug" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/androidTest/debug" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/res" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/assets" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/aidl" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/jni" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/res" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/assets" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/aidl" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/jni" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dependency-cache" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/appcompat-v7/23.1.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/cardview-v7/23.1.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/design/23.1.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/mediarouter-v7/22.2.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/recyclerview-v7/23.1.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/support-v4/23.1.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.facebook.android/facebook-android-sdk/4.7.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-ads/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-analytics/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-appindexing/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-appinvite/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-appstate/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-auth/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-base/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-basement/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-cast/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-drive/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-fitness/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-games/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-gcm/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-identity/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-location/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-maps/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-measurement/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-nearby/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-panorama/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-plus/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-safetynet/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-vision/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-wallet/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-wearable/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services/8.3.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jniLibs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/pre-dexed" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/transforms" />
+      <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
+    </content>
+    <orderEntry type="jdk" jdkName="Android API 23 Platform" jdkType="Android SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" exported="" name="play-services-ads-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="design-23.1.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-measurement-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-fitness-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-games-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-vision-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="appcompat-v7-23.1.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-base-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-appindexing-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-auth-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-drive-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-identity-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="facebook-android-sdk-4.7.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-appstate-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="support-annotations-23.1.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-location-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-safetynet-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="mediarouter-v7-22.2.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-plus-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-appinvite-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-cast-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-wearable-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="bolts-android-1.2.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-maps-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-nearby-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="recyclerview-v7-23.1.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-panorama-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-gcm-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-analytics-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-wallet-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="cardview-v7-23.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-v4-23.1.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-basement-8.3.0" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: app/src/main/java/com/cesta/cesta/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cesta/cesta/MainActivity.java	(revision )
+++ app/src/main/java/com/cesta/cesta/MainActivity.java	(revision )
@@ -0,0 +1,257 @@
+package com.cesta.cesta;
+
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.net.ConnectivityManager;
+import android.os.Bundle;
+import android.support.design.widget.Snackbar;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.Button;
+import android.widget.Toast;
+
+import com.facebook.FacebookSdk;
+
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
+import java.io.Serializable;
+
+public class MainActivity extends AppCompatActivity {
+
+	public static final String PREF = "com.cesta.cesta.PREF";
+	public static final int REQUEST_CODE_GOOGLE_SIGN_IN = 0x1;
+	public static final int REQUEST_CODE_GOOGLE_SIGN_OUT = 0x2;
+	public static final int REQUEST_CODE_FB_LOG_IN = 0x3;
+	public static final int REQUEST_CODE_FB_LOG_OUT = 0x4;
+	public static final String ACCOUNT_FILE = "account";
+	public static final String SIGNED_IN = "signedIn";
+	private static final String TAG = "MainActivity";
+
+	//private Fragment fragment;
+	private Button fbBtn;
+	private View googleBtn;
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+
+		FacebookSdk.sdkInitialize(this);
+
+		setContentView(R.layout.activity_main);
+		Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+		setSupportActionBar(toolbar);
+
+		SharedPreferences p = getSharedPreferences(PREF, Context.MODE_PRIVATE);
+		if (p.contains(SIGNED_IN) && p.getBoolean(SIGNED_IN, false)) {
+			Intent intent = new Intent(this, MapsActivity.class);
+			Serializable s = null;
+			try {
+				FileInputStream fis = openFileInput(ACCOUNT_FILE);
+				ObjectInputStream is = new ObjectInputStream(fis);
+				s = (Serializable) is.readObject();
+				is.close();
+				fis.close();
+			} catch (IOException | ClassNotFoundException e) {
+				e.printStackTrace();
+			}
+			intent.putExtra("ac", s);
+			startActivity(intent);
+			finish();
+		}
+
+		googleBtn = findViewById(R.id.sign_in);
+		googleBtn.setOnClickListener(new View.OnClickListener() {
+			@Override
+			public void onClick(View v) {
+                if (isNetworkConnected()) {
+                    Intent i = new Intent(MainActivity.this, GoogleSignActivity.class);
+                    i.setAction(GoogleSignActivity.SIGN_IN);
+                    startActivityForResult(i, REQUEST_CODE_GOOGLE_SIGN_IN);
+                } else {
+                    //Toast.makeText(MainActivity.this, "Internet not available.", Toast
+                    //        .LENGTH_SHORT).show();
+                    Snackbar.make(googleBtn, "Internet not available.", Snackbar.LENGTH_SHORT).show();
+                }
+			}
+		});
+
+		findViewById(R.id.sign_out).setOnClickListener(new View.OnClickListener() {
+			@Override
+			public void onClick(View view) {
+                if (isNetworkConnected()) {
+                    Intent i = new Intent(MainActivity.this, GoogleSignActivity.class);
+                    i.setAction(GoogleSignActivity.SIGN_OUT);
+                    startActivityForResult(i, REQUEST_CODE_GOOGLE_SIGN_OUT);
+                } else
+                    Snackbar.make(googleBtn, "Internet not available.", Snackbar.LENGTH_SHORT).show();
+			}
+		});
+
+		fbBtn = (Button) findViewById(R.id.login_button);
+		fbBtn.setOnClickListener(new View.OnClickListener() {
+			@Override
+			public void onClick(View v) {
+				//loginButton.registerCallback(callbackManager, callback);
+                if (isNetworkConnected()) {
+                    Intent i = new Intent(MainActivity.this, FBLoginActivity.class);
+                    i.setAction(FBLoginActivity.LOG_IN);
+                    startActivityForResult(i, REQUEST_CODE_FB_LOG_IN);
+                } else
+                    Snackbar.make(googleBtn, "Internet not available.", Snackbar.LENGTH_SHORT).show();
+			}
+		});
+		/*fbBtn.setReadPermissions(permissions);
+		fbBtn.registerCallback(callbackManager, callback);*/
+
+		findViewById(R.id.log_out).setOnClickListener(new View.OnClickListener() {
+			@Override
+			public void onClick(View view) {
+				if (isNetworkConnected()) {
+                    Intent i = new Intent(MainActivity.this, FBLoginActivity.class);
+                    i.setAction(FBLoginActivity.LOG_OUT);
+                    startActivityForResult(i, REQUEST_CODE_FB_LOG_OUT);
+                } else
+                    Snackbar.make(googleBtn, "Internet not available.", Snackbar.LENGTH_SHORT).show();
+			}
+		});
+	}
+
+	@Override
+	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+		super.onActivityResult(requestCode, resultCode, data);
+		//fragment.onActivityResult(requestCode, resultCode, data);
+		if (requestCode == REQUEST_CODE_GOOGLE_SIGN_IN) {
+			if (resultCode == RESULT_OK) {
+				Intent intent = new Intent(this, MapsActivity.class);
+				Serializable account = data.getSerializableExtra("Ac");
+				intent.putExtra("ac", account);
+
+				try {
+					FileOutputStream fout = openFileOutput("account", Context.MODE_PRIVATE);
+					ObjectOutputStream oos = new ObjectOutputStream(fout);
+					oos.writeObject(account);
+					fout.close();
+					oos.close();
+					Log.d(TAG, "Account saved.");
+				} catch (IOException e) {
+					e.printStackTrace();
+				}
+
+				SharedPreferences p = getSharedPreferences(PREF, Context.MODE_PRIVATE);
+				SharedPreferences.Editor edit = p.edit();
+				edit.putBoolean(SIGNED_IN, true);
+				edit.apply();
+
+				startActivity(intent);
+				finish();
+			} else {
+				Toast.makeText(this, "Failed to login.", Toast.LENGTH_SHORT).show();
+				SharedPreferences p = getSharedPreferences(PREF, Context.MODE_PRIVATE);
+				SharedPreferences.Editor edit = p.edit();
+				edit.putBoolean(SIGNED_IN, false);
+				edit.apply();
+			}
+		} else if (requestCode == REQUEST_CODE_GOOGLE_SIGN_OUT) {
+			if (resultCode == RESULT_OK) {
+				Toast.makeText(this, "Log out successful.", Toast.LENGTH_SHORT).show();
+				Log.d(TAG, "onActivityResult: Log out successful.");
+				Snackbar.make(googleBtn, "Log out successful", Snackbar.LENGTH_SHORT).show();
+			}
+		} else if (requestCode == REQUEST_CODE_FB_LOG_IN) {
+			if (resultCode == RESULT_OK) {
+				Intent intent = new Intent(this, MapsActivity.class);
+				Serializable account = data.getSerializableExtra("Ac");
+				intent.putExtra("ac", account);
+
+				try {
+					FileOutputStream fout = openFileOutput("account", Context.MODE_PRIVATE);
+					ObjectOutputStream oos = new ObjectOutputStream(fout);
+					oos.writeObject(account);
+					fout.close();
+					oos.close();
+					Log.d(TAG, "Account saved.");
+				} catch (IOException e) {
+					e.printStackTrace();
+				}
+
+				SharedPreferences p = getSharedPreferences(PREF, Context.MODE_PRIVATE);
+				SharedPreferences.Editor edit = p.edit();
+				edit.putBoolean(SIGNED_IN, true);
+				edit.apply();
+
+				startActivity(intent);
+				finish();
+			} else {
+				Toast.makeText(this, "Failed to login.", Toast.LENGTH_SHORT).show();
+				SharedPreferences p = getSharedPreferences(PREF, Context.MODE_PRIVATE);
+				SharedPreferences.Editor edit = p.edit();
+				edit.putBoolean(SIGNED_IN, false);
+				edit.apply();
+			}
+		} else if (requestCode == REQUEST_CODE_FB_LOG_OUT) {
+			if (resultCode == RESULT_OK) {
+				Toast.makeText(this, "Log out successful.", Toast.LENGTH_SHORT).show();
+				Log.d(TAG, "onActivityResult: Log out successful.");
+				Snackbar.make(fbBtn, "Log out successful", Snackbar.LENGTH_SHORT).show();
+			}
+		}
+	}
+
+    private boolean isNetworkConnected() {
+        ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
+        return cm.getActiveNetworkInfo() != null;
+    }
+
+	/*public void changeFragment(Fragment fragment) {
+		this.fragment = fragment;
+
+		FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
+		transaction.replace(R.id.fragmentContainer, fragment);
+		transaction.addToBackStack(null);
+		transaction.commit();
+	}*/
+
+	@Override
+	public boolean onCreateOptionsMenu(Menu menu) {
+		// Inflate the menu; this adds items to the action bar if it is present.
+		getMenuInflater().inflate(R.menu.menu_main, menu);
+		return true;
+	}
+
+	@Override
+	public boolean onOptionsItemSelected(MenuItem item) {
+		// Handle action bar item clicks here. The action bar will
+		// automatically handle clicks on the Home/Up button, so long
+		// as you specify a parent activity in AndroidManifest.xml.
+		int id = item.getItemId();
+
+		//noinspection SimplifiableIfStatement
+		if (id == R.id.action_settings) {
+			return true;
+		}
+
+		return super.onOptionsItemSelected(item);
+	}
+
+	/*@Override
+	protected void onPause() {
+		super.onPause();
+
+		AppEventsLogger.deactivateApp(this);
+	}
+
+	@Override
+	protected void onResume() {
+		super.onResume();
+
+		AppEventsLogger.activateApp(this);
+	}*/
+}
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle	(revision )
+++ settings.gradle	(revision )
@@ -0,0 +1,1 @@
+include ':app'
Index: app/src/release/res/values/google_maps_api.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/release/res/values/google_maps_api.xml	(revision )
+++ app/src/release/res/values/google_maps_api.xml	(revision )
@@ -0,0 +1,21 @@
+<resources>
+    <!--
+    TODO: Before you run your application, you need a Google Maps API key.
+
+    To get one, follow this link, follow the directions and press "Create" at the end:
+
+    https://console.developers.google.com/flows/enableapi?apiid=maps_android_backend&keyType=CLIENT_SIDE_ANDROID&r=ED:C4:64:CA:A7:B1:C9:08:85:EB:98:D8:08:A5:7A:63:CB:31:E5:A6%3Bcom.cesta.cesta
+
+    You can also add your credentials to an existing key, using this line:
+    ED:C4:64:CA:A7:B1:C9:08:85:EB:98:D8:08:A5:7A:63:CB:31:E5:A6;com.cesta.cesta
+
+    Alternatively, follow the directions here:
+    https://developers.google.com/maps/documentation/android/start#get-key
+
+    Once you have your key (it starts with "AIza"), replace the "google_maps_key"
+    string in this file.
+    -->
+    <string name="google_maps_key" templateMergeStrategy="preserve" translatable="false">
+        YOUR_KEY_HERE
+    </string>
+</resources>
Index: app/src/main/res/layout/fragment_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_profile.xml	(revision )
+++ app/src/main/res/layout/fragment_profile.xml	(revision )
@@ -0,0 +1,74 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+             xmlns:tools="http://schemas.android.com/tools"
+             android:layout_width="match_parent"
+             android:layout_height="match_parent"
+             android:orientation="vertical"
+              tools:context="com.cesta.cesta.ProfileFragment">
+
+    <FrameLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <ImageView
+            android:id="@+id/profile_pic"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:contentDescription="Profile Picture"
+            android:paddingTop="@dimen/nav_header_vertical_spacing"
+            android:src="@android:drawable/sym_def_app_icon"/>
+
+    </FrameLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingBottom="10dp"
+            android:paddingLeft="10dp"
+            android:paddingRight="10dp"
+            android:paddingStart="10dp"
+            android:paddingTop="@dimen/nav_header_vertical_spacing"
+            android:text="Name: "
+            android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
+
+        <TextView
+            android:id="@+id/name"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingBottom="10dp"
+            android:paddingLeft="10dp"
+            android:paddingRight="10dp"
+            android:paddingStart="10dp"
+            android:paddingTop="@dimen/nav_header_vertical_spacing"
+            android:text="Android Studio"
+            android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingBottom="10dp"
+            android:paddingLeft="10dp"
+            android:paddingRight="10dp"
+            android:paddingStart="10dp"
+            android:text="Email: " />
+
+        <TextView
+            android:id="@+id/email"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingBottom="10dp"
+            android:paddingLeft="10dp"
+            android:paddingRight="10dp"
+            android:paddingStart="10dp"
+            android:text="android.studio@android.com" />
+    </LinearLayout>
+
+</LinearLayout>
Index: app/src/main/res/layout/activity_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_profile.xml	(revision )
+++ app/src/main/res/layout/activity_profile.xml	(revision )
@@ -0,0 +1,51 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.design.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true">
+
+    <android.support.design.widget.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:fitsSystemWindows="true"
+        android:theme="@style/AppTheme.AppBarOverlay">
+
+        <android.support.design.widget.CollapsingToolbarLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:fitsSystemWindows="true"
+            app:contentScrim="?attr/colorPrimary"
+            app:layout_scrollFlags="scroll|exitUntilCollapsed">
+
+            <ImageView
+                android:id="@+id/profile_image"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:contentDescription="Cesta"
+                android:fitsSystemWindows="true"
+                android:scaleType="centerCrop"
+                android:src="@drawable/some_cesta"
+                app:layout_collapseMode="parallax"/>
+
+            <android.support.v7.widget.Toolbar
+                android:id="@+id/toolbar"
+                android:layout_width="match_parent"
+                android:layout_height="?attr/actionBarSize"
+                android:background="?attr/colorPrimary"
+                app:layout_collapseMode="pin"
+                app:popupTheme="@style/AppTheme.PopupOverlay"/>
+
+        </android.support.design.widget.CollapsingToolbarLayout>
+
+    </android.support.design.widget.AppBarLayout>
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/my_recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
+    </android.support.v7.widget.RecyclerView>
+
+</android.support.design.widget.CoordinatorLayout>
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision )
+++ .idea/runConfigurations.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RunConfigurationProducerService">
+    <option name="ignoredProducers">
+      <set>
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/res/menu/menu_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/menu_main.xml	(revision )
+++ app/src/main/res/menu/menu_main.xml	(revision )
@@ -0,0 +1,10 @@
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:context=".MainActivity">
+    <item
+        android:id="@+id/action_settings"
+        android:orderInCategory="100"
+        android:title="@string/action_settings"
+        app:showAsAction="never" />
+</menu>
Index: app/src/main/res/layout/activity_map.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_map.xml	(revision )
+++ app/src/main/res/layout/activity_map.xml	(revision )
@@ -0,0 +1,24 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context="com.pheah.pheah_android.MapActivity">
+
+    <TextView
+        android:id="@+id/alltext"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content" />
+
+    <Button
+        android:id="@+id/sign"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerHorizontal="true"
+        android:layout_centerVertical="true"
+        android:text="Open Sign." />
+
+</RelativeLayout>
Index: app/src/main/res/drawable-hdpi/side_nav_bar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-hdpi/side_nav_bar.xml	(revision )
+++ app/src/main/res/drawable-hdpi/side_nav_bar.xml	(revision )
@@ -0,0 +1,9 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <gradient
+        android:angle="135"
+        android:centerColor="#4CAF50"
+        android:endColor="#2E7D32"
+        android:startColor="#81C784"
+        android:type="linear" />
+</shape>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(revision )
+++ .idea/encodings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/debug/res/values/google_maps_api.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/debug/res/values/google_maps_api.xml	(revision )
+++ app/src/debug/res/values/google_maps_api.xml	(revision )
@@ -0,0 +1,25 @@
+<resources>
+    <!--
+    TODO: Before you run your application, you need a Google Maps API key.
+
+    To get one, follow this link, follow the directions and press "Create" at the end:
+
+    https://console.developers.google.com/flows/enableapi?apiid=maps_android_backend&keyType=CLIENT_SIDE_ANDROID&r=ED:C4:64:CA:A7:B1:C9:08:85:EB:98:D8:08:A5:7A:63:CB:31:E5:A6%3Bcom.cesta.cesta
+
+    You can also add your credentials to an existing key, using this line:
+    ED:C4:64:CA:A7:B1:C9:08:85:EB:98:D8:08:A5:7A:63:CB:31:E5:A6;com.cesta.cesta
+
+    Alternatively, follow the directions here:
+    https://developers.google.com/maps/documentation/android/start#get-key
+
+    Once you have your key (it starts with "AIza"), replace the "google_maps_key"
+    string in this file.
+    -->
+    <!--<string name="google_maps_key" templateMergeStrategy="preserve" translatable="false">
+        AIzaSyCALLUAmdwDZLfi5X_IMFfLeETDyH6Rfd8
+    </string>-->
+
+    <string name="google_maps_key" templateMergeStrategy="preserve" translatable="false">
+        AIzaSyCpyME6i0i8dFi_YDGJ61OJM82HZPOyfyk
+    </string>
+</resources>
Index: app/src/main/res/layout/nav_header_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/nav_header_main.xml	(revision )
+++ app/src/main/res/layout/nav_header_main.xml	(revision )
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="@dimen/nav_header_height"
+    android:background="@drawable/side_nav_bar"
+    android:gravity="bottom"
+    android:orientation="vertical"
+    android:paddingBottom="@dimen/activity_vertical_margin" android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin" android:paddingTop="@dimen/activity_vertical_margin"
+    android:theme="@style/ThemeOverlay.AppCompat.Dark">
+
+    <ImageView
+        android:id="@+id/profile_pic_nav"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:contentDescription="Profile Picture"
+        android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:src="@android:drawable/sym_def_app_icon" />
+
+    <TextView
+        android:id="@+id/name_nav"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:text="Android Studio"
+        android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
+
+    <TextView
+        android:id="@+id/email_nav"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="android.studio@android.com" />
+
+</LinearLayout>
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle.properties	(revision )
+++ gradle.properties	(revision )
@@ -0,0 +1,18 @@
+# Project-wide Gradle settings.
+
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+# Default value: -Xmx10248m -XX:MaxPermSize=256m
+# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
+
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
\ No newline at end of file
Index: app/src/main/res/layout/drawer_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/drawer_layout.xml	(revision )
+++ app/src/main/res/layout/drawer_layout.xml	(revision )
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v4.widget.DrawerLayout android:id="@+id/drawer_layout"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    android:orientation="vertical">
+
+    <!--<include layout="@layout/activity_maps"/>-->
+
+    <android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:app="http://schemas.android.com/apk/res-auto"
+        xmlns:tools="http://schemas.android.com/tools"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:fitsSystemWindows="true"
+        tools:context=".MainActivity">
+
+        <android.support.design.widget.AppBarLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:theme="@style/AppTheme.AppBarOverlay">
+
+            <android.support.v7.widget.Toolbar
+                android:id="@+id/toolbar"
+                android:layout_width="match_parent"
+                android:layout_height="?attr/actionBarSize"
+                android:background="?attr/colorPrimary"
+                app:popupTheme="@style/AppTheme.PopupOverlay" />
+
+        </android.support.design.widget.AppBarLayout>
+
+        <!--<include layout="@layout/content_maps" />-->
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            app:layout_behavior="@string/appbar_scrolling_view_behavior">
+
+            <FrameLayout
+                android:id="@+id/map"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent" />
+            <!--android:name="com.google.android.gms.maps.SupportMapFragment"-->
+        </LinearLayout>
+
+        <android.support.design.widget.FloatingActionButton android:id="@+id/fab"
+            xmlns:app="http://schemas.android.com/apk/res-auto"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="bottom|end"
+            android:layout_margin="@dimen/fab_margin"
+            android:src="@android:drawable/ic_input_add"
+            android:tint="@android:color/white"
+            app:backgroundTint="@color/material_orange_700"
+            app:elevation="10dp"
+            app:fabSize="normal" />
+
+    </android.support.design.widget.CoordinatorLayout>
+
+    <android.support.design.widget.NavigationView
+        android:id="@+id/nav_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        app:menu="@menu/drawer" />
+
+</android.support.v4.widget.DrawerLayout>
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision )
+++ app/src/main/res/layout/activity_main.xml	(revision )
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context=".MainActivity">
+
+    <android.support.design.widget.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:theme="@style/AppTheme.AppBarOverlay">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay" />
+
+    </android.support.design.widget.AppBarLayout>
+
+    <include layout="@layout/content_main" />
+
+    <!--<android.support.design.widget.FloatingActionButton android:id="@+id/fab"
+        android:layout_width="wrap_content" android:layout_height="wrap_content"
+        android:layout_gravity="bottom|end" android:layout_margin="@dimen/fab_margin"
+        android:src="@android:drawable/ic_dialog_email" />-->
+
+</android.support.design.widget.CoordinatorLayout>
Index: app/src/main/res/layout/frag_container.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/frag_container.xml	(revision )
+++ app/src/main/res/layout/frag_container.xml	(revision )
@@ -0,0 +1,4 @@
+<FrameLayout android:id="@+id/fragmentContainer"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent" />
\ No newline at end of file
Index: app/src/main/res/layout/content_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/content_main.xml	(revision )
+++ app/src/main/res/layout/content_main.xml	(revision )
@@ -0,0 +1,75 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context=".MainActivity">
+
+    <!--<fragment android:name="com.pheah.pheah_android.SignUpFragment"
+            android:id="@+id/sign_up_frag"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent" />-->
+
+    <!--<fragment
+        android:id="@+id/fragmentContainer"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />-->
+
+    <!--<com.google.android.gms.common.SignInButton
+        android:id="@+id/sign_in"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerVertical="true"
+        android:layout_alignEnd="@+id/login_button"
+        android:layout_alignStart="@+id/login_button" />
+
+    <com.facebook.login.widget.LoginButton
+        android:id="@+id/login_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_horizontal"
+        android:layout_marginTop="42dp"
+        android:layout_below="@+id/sign_in"
+        android:layout_centerHorizontal="true" />-->
+
+    <Button
+        android:id="@+id/sign_in"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignEnd="@+id/login_button"
+        android:layout_alignStart="@+id/login_button"
+        android:layout_centerVertical="true"
+        android:text="Google" />
+
+    <Button
+        android:id="@+id/login_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/sign_in"
+        android:layout_centerHorizontal="true"
+        android:layout_gravity="center_horizontal"
+        android:layout_marginTop="42dp"
+        android:text="Facebook" />
+
+    <Button
+        android:id="@+id/sign_out"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_above="@+id/log_out"
+        android:layout_centerHorizontal="true"
+        android:layout_marginBottom="40dp"
+        android:text="Sign out." />
+
+    <Button
+        android:id="@+id/log_out"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_centerHorizontal="true"
+        android:text="Log out." />
+
+</RelativeLayout>
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision )
+++ app/src/main/res/values/styles.xml	(revision )
@@ -0,0 +1,45 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <!--<style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        &lt;!&ndash; Customize your theme here. &ndash;&gt;
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>-->
+
+    <style name="AppTheme.NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+    </style>
+
+    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />
+
+    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
+
+    <style name="MyButtonStyle" parent="Base.Widget.AppCompat.Button">
+        <item name="colorButtonNormal">@color/material_orange_50</item>
+    </style>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="@style/Theme.AppCompat.Light">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/material_orange_500</item>
+        <item name="colorPrimaryDark">@color/material_orange_700</item>
+        <item name="colorAccent">@color/accent</item>
+
+        <item name="android:buttonStyle">@style/MyButtonStyle</item>
+
+        <item name="android:activatedBackgroundIndicator">@drawable/list_sel</item>
+    </style>
+
+    <style name="AppTheme.Transparent" parent="@style/AppTheme.NoActionBar">
+        <item name="android:windowIsTranslucent">true</item>
+        <item name="android:windowBackground">@color/transparent</item>
+        <item name="android:windowContentOverlay">@null</item>
+        <item name="android:windowNoTitle">true</item>
+        <item name="android:windowIsFloating">true</item>
+        <item name="android:backgroundDimEnabled">false</item>
+    </style>
+
+</resources>
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.gitignore	(revision )
+++ app/.gitignore	(revision )
@@ -0,0 +1,1 @@
+/build
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision )
+++ app/build.gradle	(revision )
@@ -0,0 +1,41 @@
+apply plugin: 'com.android.application'
+apply plugin: 'com.google.gms.google-services'
+
+android {
+
+    compileSdkVersion 23
+    buildToolsVersion "23.0.0"
+    repositories {
+        mavenCentral()
+    }
+
+
+    defaultConfig {
+        applicationId "com.cesta.cesta"
+        minSdkVersion 17
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+
+dependencies {
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    testCompile 'junit:junit:4.12'
+
+    compile 'com.android.support:appcompat-v7:23.1.0'
+    compile 'com.android.support:design:23.1.0'
+    compile 'com.google.android.gms:play-services-identity:8.3.0'
+    compile 'com.google.android.gms:play-services-plus:8.3.0'
+    compile 'com.facebook.android:facebook-android-sdk:4.7.0'
+    compile 'com.google.android.gms:play-services:8.3.0'
+    compile 'com.android.support:support-v4:23.1.0'
+    compile 'com.android.support:cardview-v7:23.1.0'
+}
Index: app/src/main/res/menu/drawer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/drawer.xml	(revision )
+++ app/src/main/res/menu/drawer.xml	(revision )
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+    <group android:checkableBehavior="single">
+        <item
+            android:id="@+id/map_item"
+            android:checked="true"
+            android:icon="@drawable/ic_map"
+            android:title="Map" />
+        <item
+            android:id="@+id/profile_item"
+            android:checked="true"
+            android:icon="@drawable/ic_profile"
+            android:title="Profile" />
+    </group>
+
+</menu>
\ No newline at end of file
Index: app/src/main/res/layout/activity_fblogin.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_fblogin.xml	(revision )
+++ app/src/main/res/layout/activity_fblogin.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context="com.cesta.cesta.FBLoginActivity">
+
+</RelativeLayout>
Index: app/src/main/res/layout/activity_google_sign.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_google_sign.xml	(revision )
+++ app/src/main/res/layout/activity_google_sign.xml	(revision )
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@android:color/transparent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context="com.cesta.cesta.GoogleSignActivity">
+
+
+
+</RelativeLayout>
Index: app/src/main/res/values-w820dp/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-w820dp/dimens.xml	(revision )
+++ app/src/main/res/values-w820dp/dimens.xml	(revision )
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
Index: app/src/main/java/com/cesta/cesta/ProfileActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cesta/cesta/ProfileActivity.java	(revision )
+++ app/src/main/java/com/cesta/cesta/ProfileActivity.java	(revision )
@@ -0,0 +1,183 @@
+package com.cesta.cesta;
+
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.os.Bundle;
+import android.support.design.widget.Snackbar;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.CardView;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.TextView;
+import android.widget.Toast;
+
+public class ProfileActivity extends AppCompatActivity {
+
+    private static final int REQUEST_CODE_GOOGLE_SIGN_OUT = 0x01;
+    private static final int REQUEST_CODE_FB_LOG_OUT = 0x02;
+    private static final String TAG = "ProfileActivity";
+
+    private View googleBtn;
+    private View fbBtn;
+    private Account account;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_profile);
+
+        account = (Account) getIntent().getSerializableExtra("ac");
+        final Toolbar actionBar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(actionBar);
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+
+        RecyclerView recyclerView = (RecyclerView) this.findViewById(R.id.my_recycler_view);
+
+        // use this setting to improve performance if you know that changes
+        // in content do not change the layout size of the RecyclerView
+        recyclerView.setHasFixedSize(true);
+        recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {
+            @Override
+            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
+                super.onScrollStateChanged(recyclerView, newState);
+            }
+
+            @Override
+            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
+                super.onScrolled(recyclerView, dx, dy);
+            }
+        });
+
+        // use a linear layout manager
+        RecyclerView.LayoutManager mLayoutManager = new LinearLayoutManager(this);
+        recyclerView.setLayoutManager(mLayoutManager);
+
+        // specify an adapter (see also next example)
+        ProfileContentAdapter adapter = new ProfileContentAdapter(this);
+        recyclerView.setAdapter(adapter);
+
+        /*googleBtn = findViewById(R.id.sign_out);
+        googleBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Intent i = new Intent(ProfileActivity.this, GoogleSignActivity.class);
+                i.setAction(GoogleSignActivity.SIGN_OUT);
+                startActivityForResult(i, REQUEST_CODE_GOOGLE_SIGN_OUT);
+            }
+        });
+
+        fbBtn = findViewById(R.id.log_out);
+        fbBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Intent i = new Intent(ProfileActivity.this, FBLoginActivity.class);
+                i.setAction(FBLoginActivity.LOG_OUT);
+                startActivityForResult(i, REQUEST_CODE_FB_LOG_OUT);
+            }
+        });*/
+
+        TextView name = (TextView) findViewById(R.id.name);
+        if (name != null) {
+            name.setText(account.getName());
+        } else
+            Log.e(TAG, "onCreate: name is null");
+        TextView email = (TextView) findViewById(R.id.email_nav);
+        if (email != null) {
+            email.setText(account.getEmail());
+        } else
+            Log.e(TAG, "onCreate: email is null");
+
+        Bitmap profilePic = BitmapFactory.decodeFile(account.getImagePath());
+        ImageView profileImage = (ImageView) findViewById(R.id.profile_pic_nav);
+        if (profileImage != null) {
+            profileImage.setImageBitmap(profilePic);
+        } else
+            Log.e(TAG, "onCreate: profileImage is null");
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        if (requestCode == REQUEST_CODE_GOOGLE_SIGN_OUT) {
+            if (resultCode == RESULT_OK) {
+                SharedPreferences p = getSharedPreferences(MainActivity.PREF, Context.MODE_PRIVATE);
+                SharedPreferences.Editor editor = p.edit();
+                editor.putBoolean(MainActivity.SIGNED_IN, false);
+                editor.apply();
+
+                Toast.makeText(this, "Log out successful.", Toast.LENGTH_SHORT).show();
+                Log.d(TAG, "onActivityResult: Log out successful.");
+                Snackbar.make(googleBtn, "Log out successful", Snackbar.LENGTH_SHORT).show();
+            }
+        } else if (requestCode == REQUEST_CODE_FB_LOG_OUT) {
+            if (resultCode == RESULT_OK) {
+                SharedPreferences p = getSharedPreferences(MainActivity.PREF, Context.MODE_PRIVATE);
+                SharedPreferences.Editor editor = p.edit();
+                editor.putBoolean(MainActivity.SIGNED_IN, false);
+                editor.apply();
+
+                Toast.makeText(this, "Log out successful.", Toast.LENGTH_SHORT).show();
+                Log.d(TAG, "onActivityResult: Log out successful.");
+                Snackbar.make(fbBtn, "Log out successful", Snackbar.LENGTH_SHORT).show();
+            }
+        }
+    }
+
+    private class ProfileContentAdapter extends RecyclerView.Adapter<ProfileContentAdapter
+            .ViewHolder>{
+        public ProfileContentAdapter(ProfileActivity profileActivity) {
+        }
+
+        @Override
+        public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+            View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.content_profile, parent, false);
+            return new ViewHolder(v);
+        }
+
+        @Override
+        public void onBindViewHolder(ViewHolder holder, int position) {
+            ImageView profile = (ImageView) holder.c.findViewById(R.id.profile_pic);
+        }
+
+        @Override
+        public int getItemCount() {
+            return 1;
+        }
+
+        public class ViewHolder extends  RecyclerView.ViewHolder {
+            CardView c;
+            public ViewHolder(View itemView) {
+                super(itemView);
+                c = (CardView) itemView.findViewById(R.id.profile_cardview);
+                googleBtn = itemView.findViewById(R.id.sign_out);
+                googleBtn.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View view) {
+                        Intent i = new Intent(ProfileActivity.this, GoogleSignActivity.class);
+                        i.setAction(GoogleSignActivity.SIGN_OUT);
+                        startActivityForResult(i, REQUEST_CODE_GOOGLE_SIGN_OUT);
+                    }
+                });
+
+                fbBtn = itemView.findViewById(R.id.log_out);
+                fbBtn.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View view) {
+                        Intent i = new Intent(ProfileActivity.this, FBLoginActivity.class);
+                        i.setAction(FBLoginActivity.LOG_OUT);
+                        startActivityForResult(i, REQUEST_CODE_FB_LOG_OUT);
+                    }
+                });
+            }
+        }
+    }
+}
Index: app/src/main/java/com/cesta/cesta/Account.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cesta/cesta/Account.java	(revision )
+++ app/src/main/java/com/cesta/cesta/Account.java	(revision )
@@ -0,0 +1,142 @@
+package com.cesta.cesta;
+
+import android.content.Context;
+import android.content.ContextWrapper;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.os.AsyncTask;
+import android.util.Log;
+
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.Serializable;
+import java.net.URL;
+import java.util.Calendar;
+import java.util.List;
+
+public class Account implements Serializable {
+    private String name;
+    private String email;
+    private Calendar dob;
+    private Type type;
+    private String imagePath;
+    private int age;
+    private String gender = "M";
+    private List<Pref> p;
+
+    public Account(Type type) {
+        this.type = type;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public void setEmail(String email) {
+        this.email = email;
+    }
+
+    public Calendar getDob() {
+        return dob;
+    }
+
+    public void setDob(Calendar dob) {
+        this.dob = dob;
+    }
+
+    public Type getType() {
+        return type;
+    }
+
+    public String getImagePath() {
+        return imagePath;
+    }
+
+    public void setImagePath(String imagePath) {
+        this.imagePath = imagePath;
+    }
+
+    public int getAge() {
+        return age;
+    }
+
+    public void setAge(int age) {
+        this.age = age;
+    }
+
+    public String getGender() {
+        return gender;
+    }
+
+    public void setGender(String gender) {
+        this.gender = gender;
+    }
+
+    public List<Pref> getP() {
+        return p;
+    }
+
+    public void setP(List<Pref> p) {
+        this.p = p;
+    }
+
+    public void downloadImage(final Context c, String path) {
+        new AsyncTask<String, Void, Bitmap>() {
+
+            public static final String TAG = "Account: AsyncTask";
+
+            @Override
+            protected Bitmap doInBackground(String... params) {
+
+                try {
+                    URL url = new URL(params[0]);
+                    InputStream in = url.openStream();
+                    return BitmapFactory.decodeStream(in);
+                } catch (Exception e) {
+                    Log.d(TAG, "Error getting image");
+                }
+                return null;
+            }
+
+            @Override
+            protected void onPostExecute(Bitmap bitmap) {
+                ContextWrapper cw = new ContextWrapper(c);
+                // path to /data/data/yourapp/app_data/imageDir
+                File directory = cw.getDir("imageDir", Context.MODE_PRIVATE);
+                // Create imageDir
+                File path = new File(directory, "profile.png");
+
+                FileOutputStream fos = null;
+                try {
+                    fos = new FileOutputStream(path);
+                    // Use the compress method on the BitMap object to write image to the OutputStream
+                    bitmap.compress(Bitmap.CompressFormat.PNG, 100, fos);
+                } catch (Exception e) {
+                    e.printStackTrace();
+                } finally {
+                    try {
+                        fos.close();
+                    } catch (IOException e1) {
+                        e1.printStackTrace();
+                    }
+                }
+                String pathS = directory.getAbsolutePath();
+                Account.this.setImagePath(pathS);
+            }
+        }.execute(path);
+    }
+
+    enum Type {
+        FaceBook, Google;
+    }
+}
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision )
+++ app/proguard-rules.pro	(revision )
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in /home/siddharths2710/Android/Sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision )
+++ app/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,9 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="nav_header_vertical_spacing">16dp</dimen>
+    <dimen name="nav_header_height">160dp</dimen>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+    <dimen name="fab_margin">16dp</dimen>
+</resources>
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision )
+++ .idea/gradle.xml	(revision )
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="distributionType" value="DEFAULT_WRAPPED" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="gradleHome" value="$APPLICATION_HOME_DIR$/gradle/gradle-2.4" />
+        <option name="gradleJvm" value="1.7" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/app" />
+          </set>
+        </option>
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/res/values-v21/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-v21/styles.xml	(revision )
+++ app/src/main/res/values-v21/styles.xml	(revision )
@@ -0,0 +1,9 @@
+<resources>>
+
+    <style name="AppTheme.NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
+        <item name="android:statusBarColor">@android:color/transparent</item>
+    </style>
+</resources>
Index: app/src/main/res/drawable/list_sel.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/list_sel.xml	(revision )
+++ app/src/main/res/drawable/list_sel.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@color/material_orange_900" android:state_pressed="true" />
+
+    <item android:drawable="@color/material_orange_500" android:state_activated="true" />
+
+    <item android:drawable="@android:color/transparent" />
+</selector>
\ No newline at end of file
Index: app/src/main/res/layout/activity_maps.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_maps.xml	(revision )
+++ app/src/main/res/layout/activity_maps.xml	(revision )
@@ -0,0 +1,46 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+                xmlns:tools="http://schemas.android.com/tools"
+                android:layout_width="fill_parent"
+                android:layout_height="fill_parent"
+                tools:context="com.cesta.cesta.MapsActivity">
+
+
+    <fragment
+        android:id="@+id/map"
+        android:name="com.google.android.gms.maps.SupportMapFragment"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/fab"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_centerHorizontal="true"
+        android:layout_gravity="bottom|center_horizontal"
+        android:layout_marginBottom="47dp"
+        android:src="@android:drawable/ic_input_add" />
+
+    <EditText
+        android:id="@+id/Search_field"
+        android:layout_width="match_parent"
+        android:layout_height="33dp"
+        android:layout_alignParentTop="true"
+        android:layout_marginLeft="54dp"
+        android:layout_marginRight="82dp"
+        android:layout_marginTop="15dp"
+        android:backgroundTint="@color/white"
+        android:gravity="start|center"
+        android:hint="Enter destination"
+        android:inputType="text"
+        android:padding="5dp"
+        android:textColor="#843a00" />
+
+    <!--
+       <ListView android:id="@+id/List_places" android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/filterLayout"
+           android:choiceMode="singleChoice" />
+    -->
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/drawer_list_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/drawer_list_item.xml	(revision )
+++ app/src/main/res/layout/drawer_list_item.xml	(revision )
@@ -0,0 +1,12 @@
+<TextView android:id="@android:id/text1"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="?android:attr/activatedBackgroundIndicator"
+    android:gravity="center_vertical"
+    android:minHeight="?android:attr/listPreferredItemHeightSmall"
+    android:paddingLeft="16dp"
+    android:paddingRight="16dp"
+    android:text="Hello"
+    android:textAppearance="?android:attr/textAppearanceListItemSmall"
+    android:textColor="#000" />
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision )
+++ app/src/main/res/values/colors.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="material_orange_300">#ffa000</color>
+    <color name="material_orange_500">#FF9800</color>
+    <color name="material_orange_700">#F57C00</color>
+    <color name="material_orange_900">#E65100</color>
+    <color name="material_yellow_A200">#FFFF00</color>
+    <color name="accent">#0067FF</color>
+    <color name="material_orange_50">#FFF3E0</color>
+    <color name="material_amber_500">#FFC107</color>
+    <color name="transparent">#44000000</color>
+</resources>
\ No newline at end of file
